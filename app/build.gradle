apply plugin: 'com.android.application'

def keyStorePropertiesFile = rootProject.file('keystore.properties')
def keyStoreProperties = new Properties()
keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.example.cityweather"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keyStoreProperties['KEY_STORE_FILE'])
            storePassword keyStoreProperties['KEY_STORE_PASSWORD']
            keyAlias = keyStoreProperties['KEY_ALIAS']
            keyPassword = keyStoreProperties['KEY_PASSWORD']
        }
    }

    buildTypes {
        debug {
            def googleApiKey = keyStoreProperties['GOOGLE_MAPS_API_KEY']
            def openWeatherKey = keyStoreProperties['OPEN_WEATHER_API_KEY']
            buildConfigField 'String', 'GOOGLE_MAPS_API_KEY', googleApiKey
            buildConfigField 'String', 'OPEN_WEATHER_API_KEY', openWeatherKey
            resValue 'string', 'google_maps_api_key', googleApiKey
        }
        release {
            applicationIdSuffix '.release'
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            def googleMapsReleaseApiKey = System.getenv('GOOGLE_MAPS_API_KEY') ?: null
            def openWeatherReleaseApiKey = System.getenv('OPEN_WEATHER_API_KEY') ?: null

            buildConfigField 'String', 'GOOGLE_MAPS_API_KEY', googleMapsReleaseApiKey
            buildConfigField 'String', 'OPEN_WEATHER_API_KEY', openWeatherReleaseApiKey
            resValue 'string', 'google_maps_api_key', googleMapsReleaseApiKey
            signingConfig signingConfigs.release
            versionNameSuffix = '1.0'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.2.0'
    implementation "androidx.room:room-runtime:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.2.0'
    implementation 'androidx.work:work-runtime:2.3.4'
    implementation 'com.facebook.stetho:stetho:1.5.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.12.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.13'
}
